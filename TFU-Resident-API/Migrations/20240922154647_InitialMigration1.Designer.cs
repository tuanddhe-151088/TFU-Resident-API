// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TFU_Resident_API.Models.SoftwareOwnerTFU;

#nullable disable

namespace TFU_Resident_API.Migrations
{
    [DbContext(typeof(AppDbContext1))]
    [Migration("20240922154647_InitialMigration1")]
    partial class InitialMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.Investor", b =>
                {
                    b.Property<int>("InvestorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestorID"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("InvestorID");

                    b.HasIndex("UserID");

                    b.ToTable("Investors");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvestorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("InvestorID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.Investor", b =>
                {
                    b.HasOne("TFU_Resident_API.Models.SoftwareOwnerTFU.User", "User")
                        .WithMany("Investors")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.Payment", b =>
                {
                    b.HasOne("TFU_Resident_API.Models.SoftwareOwnerTFU.Investor", "Investor")
                        .WithMany("Payments")
                        .HasForeignKey("InvestorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investor");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.User", b =>
                {
                    b.HasOne("TFU_Resident_API.Models.SoftwareOwnerTFU.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.Investor", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TFU_Resident_API.Models.SoftwareOwnerTFU.User", b =>
                {
                    b.Navigation("Investors");
                });
#pragma warning restore 612, 618
        }
    }
}
